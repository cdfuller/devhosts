name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

env:
  GO_VERSION_FILE: go.mod

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          cache: true
      - name: Run tests
        run: go test ./...
      - name: Run go vet
        run: go vet ./...
      - name: Build binary
        run: |
          mkdir -p dist/${GOOS}-${GOARCH}
          go build -o dist/${GOOS}-${GOARCH}/devhosts ./cmd/devhosts
      - name: Package archive
        run: |
          tar -C dist/${GOOS}-${GOARCH} -czf dist/devhosts-${GOOS}-${GOARCH}.tar.gz devhosts
      - name: Generate checksum
        run: |
          shasum -a 256 dist/devhosts-${GOOS}-${GOARCH}.tar.gz > dist/devhosts-${GOOS}-${GOARCH}.sha256
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devhosts-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            dist/devhosts-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
            dist/devhosts-${{ matrix.goos }}-${{ matrix.goarch }}.sha256
          if-no-files-found: error

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: devhosts-*
          path: dist
          merge-multiple: true
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
